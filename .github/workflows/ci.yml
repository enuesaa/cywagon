name: ci

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env
      - run: go install

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env
      - run: go test ./...

  staticcheck:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - run: echo '# staticcheck' >> $GITHUB_STEP_SUMMARY
      - run: staticcheck ./... >> $GITHUB_STEP_SUMMARY

  cover:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env

      - run: go test -cover ./... -coverprofile=cover.out
      - run: go tool cover -html=cover.out -o cover.html

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: cover.html

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env

      - run: go install
      - run: pnpm install
        working-directory: ./testdata/sampleapp
      - run: pnpm build
        working-directory: ./testdata/sampleapp

      - run: nohup cywagon up ./testdata/sampleapp/server &
      - run: hurl --test ./testdata/sampleapp/e2e
  
  multisite:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/env

      - run: go install
      - run: pnpm install
        working-directory: ./testdata/sampleapp
      - run: pnpm build
        working-directory: ./testdata/sampleapp

      - name: Install mkcert
        run: |
          sudo apt install -y libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert

      - run: sudo task -t ./testdata/multisite/Taskfile.yml setup

      - run: nohup cywagon up ./testdata/multisite/server &
      - run: hurl --test ./testdata/multisite/e2e
